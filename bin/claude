#!/bin/sh

# This script manages Claude Code execution and configuration.
#
# The script performs two primary functions:
# 1. Executes Claude Code
# 2. Merges configurations into the global Claude configuration
#
# The configuration merge allows defining Claude settings (such as MCP servers
# amongst others) in a local claude.json file, which are then merged into the
# global ~/.claude.json configuration.
#
# Requirements:
#   - jq (for configuration merging, optional)

# constants
CLAUDE_DIR="${HOME}/.claude"
GLOBAL_CONFIG="${HOME}/.claude.json"
LOCAL_CONFIG="${CLAUDE_DIR}/claude.json"

# log to stderr and exit failure
die() {
  printf "Error: %s\n" "${1}" >&2
  exit 1
}

# attempt to merge configurations if conditions are met
attempt_merge() {
  command -v jq >/dev/null 2>&1 \
    && touch "${GLOBAL_CONFIG}" \
    && jq -s '.[0] + .[1]' \
      "${GLOBAL_CONFIG}" "${LOCAL_CONFIG}" >"${GLOBAL_CONFIG}.tmp" \
    && mv "${GLOBAL_CONFIG}.tmp" "${GLOBAL_CONFIG}"

  # always continue, merge is optional
  return 0
}

# launch claude with provided arguments
launch_claude() {
  exec nix --accept-flake-config run github:numtide/nix-ai-tools#claude-code -- --dangerously-skip-permissions "${@}"
}

# main
attempt_merge \
  && launch_claude "${@}"
